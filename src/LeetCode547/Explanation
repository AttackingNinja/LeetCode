1.并查集的使用场景：数据量极大，用其他数据结构来描述的话，会造成使用空间过大或者算法时间复杂度过高
2.一般会将给定数据实现成并查集森林的形式
2.实现：用一个一维数组father[n]，每个元素存储该元素父节点的索引，根节点存储自身
3.核心操作find()：对每个元素，沿树一直向上查找根节点，在查找的途中，将非根节点的父节点改为根节点（路径压缩）;还有另一种优化是按按秩合并，也即将秩较小的树合并到秩较大的树中
4.核心操作union()：将满足条件的两个元素所在树合并（一定要通过union函数合并，不要直接修改father数组）